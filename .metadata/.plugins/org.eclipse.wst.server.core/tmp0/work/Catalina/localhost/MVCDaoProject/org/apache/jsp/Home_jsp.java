/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2017-11-23 20:31:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.stosh.pensionerModal.Comment;
import com.stosh.pensionerModal.Pensioner;
import java.util.*;

public final class Home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.stosh.pensionerModal.Pensioner");
    _jspx_imports_classes.add("com.stosh.pensionerModal.Comment");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<!-- <h1>Hello, This is my Home Page after you logged in.</h1> -->\n");
      out.write("\t ");

			Pensioner comtd = (Pensioner)session.getAttribute("vfp");
			if(comtd != null){
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t<h1>Welcome: ");
      out.print( comtd.getFirstName() );
      out.write(' ');
      out.print( comtd.getLastName() );
      out.write("</h1>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t");
}  else{
			response.sendRedirect("Signup.jsp");
		}
      out.write(" \n");
      out.write("\t\t\n");
      out.write("\t\n");
      out.write("\t<form action=\"CommentServlet\" method = \"post\">\n");
      out.write("\t\t<h1>Please leaver your Comments</h1>\n");
      out.write("\t\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<input type =\"text\" name = \"Commentator\">\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<textarea name=\"Message\" rows=\"10\" cols=\"150\"></textarea>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<br>\n");
      out.write("\t\t\n");
      out.write("\t\t<div>\n");
      out.write("\t\t\t<input type =\"submit\" name = \"SubmittedBy\">\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("\t</form>\n");
      out.write("\t\n");
      out.write("\t<h1>Comments</h1>\n");
      out.write("\t\t");

			List<Comment> commentList = (ArrayList)request.getAttribute("sta");
		    if(commentList == null){
			commentList = new ArrayList();
		}
		
		
      out.write("\n");
      out.write("\t\t\n");
      out.write("\t\t<!-- *****************************NAME********************************************************* -->\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<th>Name</th>\n");
      out.write("\t\t\t\t\t  <th>Comments</th>\t\n");
      out.write("\t\t\t\t</tr>\t\t\t\t\t\t\n");
      out.write("\t\t\t");
 for(Comment ct :commentList){
      out.write("\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t");
      out.write("\n");
      out.write("\t\t\t\t\t \n");
      out.write("\t\t\t\t\t <td> <h4>");
      out.print( ct.getCompleteName() );
      out.write(" </h4><br>\n");
      out.write("\t\t\t\t\t \t");
      out.print( ct.getMessage() );
      out.write("  </td> \t\t\t\n");
      out.write("\t\t\t\t</tr>\n");
      out.write("\t\t\t");
} 
      out.write("\n");
      out.write("\t\t</table>\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t<!-- ***********************COMMENTS****************************************************** -->\n");
      out.write("\t\t\n");
      out.write("\t\t");
      out.write("\n");
      out.write("\t\t<!-- *************************FOR LOGOUT**************************************************** -->\n");
      out.write("\t\t\n");
      out.write("\t\t<h1><a href=\"Logout.jsp\">LogOut</a></h1>\n");
      out.write("\t\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
